name: _infra_create

on:
  workflow_dispatch:

# Special permissions required for OIDC authentication
permissions:
  contents: read

env:
  TERRAFORM_DIRECTORY: '${{ github.workspace }}/demo2/platform_resources'
  
  TERRAFORM_VERSION: '1.4.6'

jobs:
  create_infrastructure:
    name: Create infrastructure
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
      ACTIONS_STEP_DEBUG: true
  
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Login to Azure Subscription where the resources should be created.
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CONNECTION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}
            terraform_wrapper: false

        - name: Initialize Terraform
          id: init
          working-directory: ${{ env.TERRAFORM_DIRECTORY }}
          run: terraform init -backend-config=${{ github.workspace }}/${{ env.TERRAFORM_DIRECTORY }}/backend.conf

        - name: Terraform Validate
          id: validate
          working-directory: ${{ env.TERRAFORM_DIRECTORY }}
          run: terraform validate
          continue-on-error: false

        - name: Terraform Format
          id: format
          working-directory: ${{ env.TERRAFORM_DIRECTORY }}
          run: terraform fmt -check
          continue-on-error: false

        - name: Terraform Plan
          id: plan
          working-directory: ${{ env.TERRAFORM_DIRECTORY }}
          shell: bash
          run: |
            export exitcode=0
            terraform plan -detailed-exitcode -no-color -out tfplan -lock=false -var-file=${{ github.workspace }}/${{ env.TERRAFORM_DIRECTORY }}/terraform.tfvars || export exitcode=$?
            echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
            if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
            else
            exit 0
            fi

        - name: Terraform Apply
          id: apply
          if: github.ref == 'refs/heads/main' && steps.plan.outputs.exitcode == 2
          working-directory: ${{ env.TERRAFORM_DIRECTORY }}
          run: terraform apply -auto-approve tfplan